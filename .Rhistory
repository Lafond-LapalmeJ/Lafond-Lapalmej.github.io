setwd("/home/joel/prog/Lafond-Lapalmej.github.io")
stats_last10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
stats = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=10&lines=single&draftteam=ALL"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
pp = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=410&lines=single&draftteam=ALL"
pp10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
teampp10 = "https://www.naturalstattrick.com/teamtable.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&rate=n&team=all&loc=B&gpf=10&fd=&td="
nhl.last10 = htmltab(doc = stats_last10, which =1)
nhl.tab = htmltab(doc = stats, which = 1)
nhl.pp = htmltab(doc = pp, which = 1)
nhl.pp10 = htmltab(doc = pp10, which = 1)
nhl.teampp10 = htmltab(doc = teampp10, which = 1)
nhl.g = htmltab(doc = webg,which = 1)
nhl.g = htmltab(doc = webg,which = 1)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
salary
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
salary
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
teamname = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' )
teamab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
names(teamab) = teamname
teampp10$Team = teamab[teampp10$Team]
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
pj_min = 5
tab = filter(tab,as.numeric(GP.x)>=pj_min)
tabg = filter(tabg, as.numeric(Goalie.Stats....GP) >= pj_min)
tabpp = filter(tabpp,as.numeric(GP)>=pj_min)
tabpp = mutate(tabpp, ppshare = (as.numeric(TOI.x)/as.numeric(GP.x)) / (as.numeric(TOI.y)/as.numeric(GP.y)) * 100)
tabg = mutate(tabg,pg = 2 * as.numeric(tabg$Goalie.Stats....W)+ 2* as.numeric(tabg$Goalie.Stats....SO) + as.numeric(tabg$Goalie.Stats....T.O))
data_pool = cbind(tab$Player,tab$GP.x,tab$Total.Points.x,tab$GP.y,tab$Total.Points.y)
data_pool = rbind(data_pool,cbind(tabg$Player,tabg$Goalie.Stats....GP,tabg$pg,tabg$Goalie.Stats....GP,tabg$pg))
colnames(data_pool) = c("name" ,"pj", "pts","pj10","pts10")
data_pool = data.frame(data_pool,stringsAsFactors = FALSE)
data_pool$name[which(data_pool$name == "Evgenii Dadonov")] = "Evgeny Dadonov"
data_pool$name[which(data_pool$name == "Artemi Panarin")] = "Artemy Panarin"
data_pool$name[which(data_pool$name == "TJ Brodie")] = "T.J. Brodie"
data_pool$name[which(data_pool$name == "Alex Nylander")] = "Alexander Nylander"
data_pool$name[which(data_pool$name == "Matt Dumba")] = "Mathew Dumba"
data_pool$name[which(data_pool$name == "Zach Werenski")] = "Zachary Werenski"
tab$Player[which(tab$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tab$Player[which(tab$Player == "Artemi Panarin")] = "Artemy Panarin"
tab$Player[which(tab$Player == "TJ Brodie")] = "T.J. Brodie"
tab$Player[which(tab$Player == "Alex Nylander")] = "Alexander Nylander"
tab$Player[which(tab$Player == "Matt Dumba")] = "Mathew Dumba"
tab$Player[which(tab$Player == "Zach Werenski")] = "Zachary Werenski"
tabpp$Player[which(tabpp$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tabpp$Player[which(tabpp$Player == "Artemi Panarin")] = "Artemy Panarin"
tabpp$Player[which(tabpp$Player == "TJ Brodie")] = "T.J. Brodie"
tabpp$Player[which(tabpp$Player == "Alex Nylander")] = "Alexander Nylander"
tabpp$Player[which(tabpp$Player == "Matt Dumba")] = "Mathew Dumba"
tabpp$Player[which(tabpp$Player == "Zach Werenski")] = "Zachary Werenski"
# get new salary
salary = read_excel("~/Documents/pool/Liste_2019-20_PDC_révision_nov_19.xlsx", sheet = 1)
salary = data.frame(salary)
#salary$pos[which(salary$pos == "GAR")] = "G"
salary$pos[which(salary$pos == "CA")] = "HQ"
ind_sal = which(toupper(salary$name) %in% toupper(data_pool$name))
salary$name[-ind_sal]
ind_pool = which(toupper(data_pool$name) %in% toupper(salary$name))
data_pool$name[-ind_pool]
#data_pool[grepl(x=data_pool$name,pattern = "Mat"),]
#salary = salary[-which(salary$Name %in% c("Tyson Barrie")),]
dupSalary = which(salary$name == names(which(table(factor(salary$name)) > 1)))
dupPool = which(data_pool$name == names(which(table(factor(data_pool$name))>1)))
if(length(dupSalary) > 0) {salary = salary[-dupSalary,]}
if(length(dupPool) > 0){ data_pool = data_pool[-dupPool,]}
data_pool = data_pool[which(toupper(data_pool$name) %in% toupper(salary$name)),]
salary = salary[which(toupper(salary$name) %in% toupper(data_pool$name)),]
data_pool = data_pool[order(data_pool$name),]
salary = salary[order(salary$name),]
data.frame(salary$name,data_pool$name)
data_pool$caphit = as.numeric(salary$salary)
data_pool$pos = salary$pos
data_pool$team = salary$team
#ppg = as.numeric(data_pool$pts)/as.numeric(data_pool$pj)
ppg = as.numeric(data_pool$pts10)/as.numeric(data_pool$pj10)
data_pool=cbind(data_pool,ppg)
head(data_pool)
data_pool = data_pool[-which(data_pool$team == "UFA"),]
data_pool$team[which(data_pool$team == "MTL")] = "MON"
alignment = read.csv("~/Documents/pool/alignment.csv",stringsAsFactors = FALSE)
alignment$name = gsub(pattern = " $",replacement = "",x = alignment$name)
alignment = alignment[1:19,]
# ajouter prévision selon match restant
calendar = read.csv(file = "~/Documents/pool/calendar.tsv", sep = "\t")
year = as.numeric(gsub(pattern = "-.*","",x = calendar$Date))
month = as.numeric(gsub(pattern = "20[21][0-9]-","",x = gsub(pattern = "-[0-9]*$","",calendar$Date)))
day = as.numeric(gsub(pattern = "20[12][0-9]-[0-9]*-","",calendar$Date))
calendar = cbind(calendar,year,month,day)
m1 = 11
day1 = 21
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1))])
grem1 = V+H
grem1[order(grem1)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem1 = data.frame(grem1,tm,1:31,stringsAsFactors = FALSE)
grem1
m2 = 12
day2 = 0
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
grem = V+H
grem[order(grem)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem = data.frame(grem,tm,1:31,stringsAsFactors = FALSE)
grem
proj = apply(X = data_pool,MARGIN = 1,FUN = function(x){
ind = which(grem$tm == x[8])
return((as.numeric(x[9]))*as.numeric(grem[ind,2]))
})
proj = unlist(proj)
#proj = data_pool$ppg * 20
data_pool$proj = proj
head(data_pool)
data_pool$proj[which(data_pool$name %in% c("Matt Murray"))] = 100
data_pool$proj[which(data_pool$name %in% c("Ben Bishop"))] = 100
data_pool$proj[which(data_pool$name %in% c("Tomas Tatar"))] = -100
#data_pool$proj[which(data_pool$name %in% c("John Carlson"))] = -100
data_pool$proj[which(data_pool$name %in% c("Evgeni Malkin"))] = 100
#data_pool$proj[which(data_pool$name %in% c("Alexander Edler"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Paul Stastny"))] = -100
data_pool$proj[which(data_pool$name %in% c("Tyler Ennis"))] = -100
data_pool$proj[which(data_pool$name %in% c("Clayton Keller"))] = -100
data_pool$proj[which(data_pool$name %in% c("Alexander Edler"))] = -100
data_pool$proj[which(data_pool$name %in% c("Andrei Svechnikov"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Adam Fox"))] = 100
#data_pool$proj[which(data_pool$name %in% c("J.T. Miller"))] = 100
data_pool$proj[which(data_pool$name %in% c("Bryan Little"))] = -100
gpm = matrix(0,nrow=31,ncol=7)
a=1
for(i in c(10:12,1:4)){
V = table(calendar$Visitor[which(calendar$month==i)])
H =table(calendar$Home[which(calendar$month==i)])
oct = V+H
gpm[,a] = oct
a = a + 1
}
colnames(gpm) = as.character(c(10:12,1:4))
rownames(gpm) = names(oct)
gpm = data.frame(gpm)
plot(0,0, ylim=c(9,17),xlim =c(1,7),xaxt='n')
axis(side = 1,at = 1:7,labels = c("Oct","Nov","Dec","Jan","Fev","Mar","Avr"))
apply(X = gpm,MARGIN = 1,lines)
tab = inner_join(tab,data_pool[,c('name','caphit','pos')],by = c("Player" = "name"))
tab = mutate(tab, pp100k = (as.numeric(Total.Points.y) / as.numeric(GP.y) * 82) / (caphit/100000))
tab = mutate(tab, TOIPG = as.numeric(TOI.y) / as.numeric(GP.y))
tab = inner_join(tab,tabpp[,c('Player','ppshare')], by = 'Player')
#tab = select(tab,c('Player','Team.x', 'pos', "GP.y", "TOIPG", "caphit", "pp100k", "Goals.y", "Total.Assists.y", "Total.Points.y", "IPP.y", "Shots.y", "SH..y","ppshare" ))
tab = select(tab,c('Player', "TOIPG", "pp100k", "IPP.y", "Shots.y", "SH..y", "ppshare"))
tab = transform(tab,SH..y = as.numeric(SH..y))
ctoi = filter(tab,TOIPG > 15)['Player']
cppshare = filter(tab,ppshare > 30)['Player']
cshot = filter(tab,SH..y < 30)['Player']
ccand = filter(tab,Player %in% alignment$name)
cplayer = intersect(intersect(ctoi,cppshare),cshot)[,1]
candidat = tab[tab$Player %in% cplayer,]
candidat = right_join(data_pool,candidat, by = c('name' = 'Player'))
data_pool = filter(data_pool,(pos == 'G' | name %in% alignment$name | name %in% candidat$name ))
watchlist = filter(tab,Player %in% alignment$name)
watchlist = right_join(data_pool,watchlist, by = c('name' = 'Player'))
watchlist = watchlist %>% mutate_if(is.numeric, round, 2)
out_wl = datatable(watchlist,options = list(pageLength = 20))
print(watchlist)
########### test simplex
library(Rglpk)
#tab_sante_game = tab_sante_game[-which(tab_sante_game$Last.Name=="Feldman"),]
sub = list()
limit = 100000
trade_nb = 5
for(j in 1:trade_nb){
limit = 100000
for(i in 1:4){
fppg = as.numeric(data_pool$proj)
#fppg = as.numeric(data_pool$)
sal = as.numeric(data_pool$caphit)
nC = rep(0,nrow(data_pool))
lineup = nD = nG = nAD = nAG = nHQ = nC
indc = which(data_pool$pos == "C")
indad = which(data_pool$pos == "DR")
indag = which(data_pool$pos == "GA")
indhq = which(data_pool$pos == "HQ")
indd = which(data_pool$pos == "DEF")
indg = which(data_pool$pos == "G")
indlineup = which(toupper(data_pool$name) %in% toupper(alignment$name[alignment$pos != "Out"]))
indOut = which(toupper(data_pool$name) %in% toupper(alignment$name[alignment$pos == "Out"]))
length(indlineup)
data_pool[indlineup,]
nC[indc] = 1
nAD[indad] = 1
nAG[indag] = 1
nHQ[indhq] = 1
nD[indd] = 1
nG[indg] = 1
lineup[indOut] = 1000
lineup[indlineup] = -1
C=4
AD = 3
AG = 3
HQ = 3
D=4
G=2
keep=-19 + j
cap = 97000000
bv = c(cap,C,AD,AG,HQ,D,G,keep,limit-.01)
mat = rbind(sal,nC,nAD,nAG,nHQ,nD,nG,lineup,fppg)
test = Rglpk_solve_LP(obj=fppg,mat=mat,dir=c("<=",rep("==",length(bv)-2),"<"),rhs=bv,types="B",max=TRUE)
#test
sol = data_pool[which(test$solution==1),]
sol[order(sol$pos),]
sum(data_pool$caphit[which(test$solution==1)])
sum(as.numeric(data_pool$proj)[which(test$solution==1)])
data.frame(sol$name)
exlineup = alignment$name[order(alignment$pos[alignment$pos!="Out"],alignment$name[alignment$pos!="Out"])]
#cbind(exlineup,sol[order(sol$pos),])
sum(data_pool$caphit[which(test$solution==1)])
sum(as.numeric(data_pool$pts)[which(test$solution==1)])
sub1 = cbind(exlineup[-which(exlineup %in% sol$name)],
sol[order(sol$pos),][-which(sol$name[order(sol$pos)]%in% exlineup),])
colnames(sub1)[1] = "explayer"
sub1 = left_join(sub1,tab, by = c('name' = 'Player'))
sub1 = sub1 %>% mutate_if(is.numeric, round, 2)
k = (j-1)*4 + i
sub[[k]] = sub1
limit = sum(data_pool$proj[which(test$solution == 1)])
}
}
# print html report
candidat = transform(candidat,pj = as.numeric(pj))
candidat = transform(candidat,pts = as.numeric(pts))
candidat = transform(candidat,pj10 = as.numeric(pj10))
candidat = transform(candidat,pts10 = as.numeric(pts10))
candidat = transform(candidat,pos = factor(pos))
candidat = transform(candidat,team = factor(team))
candidat = transform(candidat,IPP.y = as.numeric(IPP.y))
candidat = transform(candidat,Shots.y = as.numeric(Shots.y))
candidat = transform(candidat,SH..y = as.numeric(SH..y))
candidat = transform(candidat,pts = as.numeric(pts))
candidat = candidat %>% mutate_if(is.numeric, round, 2)
out_sub = lapply(sub,FUN = datatable)
out_c = datatable(candidat,filter='top',options = list(pageLength = 20, autoWidth = TRUE))
out_G = datatable(filter(data_pool, pos == 'G'))
game_rem = inner_join(grem,grem1,by='Var1')
game_rem = select(game_rem, c("Var1", 'Freq.y', 'Freq.x'))
colnames(game_rem) = c("Team","G to end of month", "G to end of next month")
out_grem = datatable(game_rem,options = list(pageLength = 31))
out_trade = prependContent(out_sub[[1]],out_sub[[2]],out_sub[[3]],out_sub[[4]])
out_candidat = prependContent(out_G,out_c)
saveWidget(out_grem,file = paste(getwd(),"/grem/index.html",sep=""),title = "Game Remaining")
saveWidget(out_trade,file = paste(getwd(),"/trade/index.html",sep=""),title = "Trade")
saveWidget(out_candidat,file = paste(getwd(),"/candidat/index.html",sep=""),title = "Candidats")
saveWidget(out_wl,file = paste(getwd(),"/alignement/index.html",sep=""),title = "Alignement")
print(sub)
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
teamname = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' )
teamab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
names(teamab) = teamname
teampp10$Team = teamab[teampp10$Team]
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
pj_min = 5
tab = filter(tab,as.numeric(GP.x)>=pj_min)
tabg = filter(tabg, as.numeric(Goalie.Stats....GP) >= pj_min)
tabpp = filter(tabpp,as.numeric(GP)>=pj_min)
tabpp = mutate(tabpp, ppshare = (as.numeric(TOI.x)/as.numeric(GP.x)) / (as.numeric(TOI.y)/as.numeric(GP.y)) * 100)
tabg = mutate(tabg,pg = 2 * as.numeric(tabg$Goalie.Stats....W)+ 2* as.numeric(tabg$Goalie.Stats....SO) + as.numeric(tabg$Goalie.Stats....T.O))
data_pool = cbind(tab$Player,tab$GP.x,tab$Total.Points.x,tab$GP.y,tab$Total.Points.y)
data_pool = rbind(data_pool,cbind(tabg$Player,tabg$Goalie.Stats....GP,tabg$pg,tabg$Goalie.Stats....GP,tabg$pg))
colnames(data_pool) = c("name" ,"pj", "pts","pj10","pts10")
data_pool = data.frame(data_pool,stringsAsFactors = FALSE)
data_pool$name[which(data_pool$name == "Evgenii Dadonov")] = "Evgeny Dadonov"
data_pool$name[which(data_pool$name == "Artemi Panarin")] = "Artemy Panarin"
data_pool$name[which(data_pool$name == "TJ Brodie")] = "T.J. Brodie"
data_pool$name[which(data_pool$name == "Alex Nylander")] = "Alexander Nylander"
data_pool$name[which(data_pool$name == "Matt Dumba")] = "Mathew Dumba"
data_pool$name[which(data_pool$name == "Zach Werenski")] = "Zachary Werenski"
tab$Player[which(tab$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tab$Player[which(tab$Player == "Artemi Panarin")] = "Artemy Panarin"
tab$Player[which(tab$Player == "TJ Brodie")] = "T.J. Brodie"
tab$Player[which(tab$Player == "Alex Nylander")] = "Alexander Nylander"
tab$Player[which(tab$Player == "Matt Dumba")] = "Mathew Dumba"
tab$Player[which(tab$Player == "Zach Werenski")] = "Zachary Werenski"
tabpp$Player[which(tabpp$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tabpp$Player[which(tabpp$Player == "Artemi Panarin")] = "Artemy Panarin"
tabpp$Player[which(tabpp$Player == "TJ Brodie")] = "T.J. Brodie"
tabpp$Player[which(tabpp$Player == "Alex Nylander")] = "Alexander Nylander"
tabpp$Player[which(tabpp$Player == "Matt Dumba")] = "Mathew Dumba"
tabpp$Player[which(tabpp$Player == "Zach Werenski")] = "Zachary Werenski"
# get new salary
salary = read_excel("~/Documents/pool/Liste_2019-20_PDC_révision_nov_19.xlsx", sheet = 1)
salary = data.frame(salary)
#salary$pos[which(salary$pos == "GAR")] = "G"
salary$pos[which(salary$pos == "CA")] = "HQ"
ind_sal = which(toupper(salary$name) %in% toupper(data_pool$name))
salary$name[-ind_sal]
ind_pool = which(toupper(data_pool$name) %in% toupper(salary$name))
data_pool$name[-ind_pool]
#data_pool[grepl(x=data_pool$name,pattern = "Mat"),]
#salary = salary[-which(salary$Name %in% c("Tyson Barrie")),]
dupSalary = which(salary$name == names(which(table(factor(salary$name)) > 1)))
dupPool = which(data_pool$name == names(which(table(factor(data_pool$name))>1)))
if(length(dupSalary) > 0) {salary = salary[-dupSalary,]}
if(length(dupPool) > 0){ data_pool = data_pool[-dupPool,]}
data_pool = data_pool[which(toupper(data_pool$name) %in% toupper(salary$name)),]
salary = salary[which(toupper(salary$name) %in% toupper(data_pool$name)),]
data_pool = data_pool[order(data_pool$name),]
#data_pool = data_pool[-which(duplicated(data_pool$name)),]
salary = salary[order(salary$name),]
data.frame(salary$name,data_pool$name)
data_pool$caphit = as.numeric(salary$salary)
data_pool$pos = salary$pos
data_pool$team = salary$team
#ppg = as.numeric(data_pool$pts)/as.numeric(data_pool$pj)
ppg = as.numeric(data_pool$pts10)/as.numeric(data_pool$pj10)
data_pool=cbind(data_pool,ppg)
head(data_pool)
data_pool = data_pool[-which(data_pool$team == "UFA"),]
data_pool$team[which(data_pool$team == "MTL")] = "MON"
#data_pool$caphit = as.numeric(gsub(pattern = ",| |\\$","",data_pool$caphit))
alignment = read.csv("~/Documents/pool/alignment.csv",stringsAsFactors = FALSE)
alignment$name = gsub(pattern = " $",replacement = "",x = alignment$name)
alignment = alignment[1:19,]
# ajouter prévision selon match restant
calendar = read.csv(file = "~/Documents/pool/calendar.tsv", sep = "\t")
year = as.numeric(gsub(pattern = "-.*","",x = calendar$Date))
month = as.numeric(gsub(pattern = "20[21][0-9]-","",x = gsub(pattern = "-[0-9]*$","",calendar$Date)))
day = as.numeric(gsub(pattern = "20[12][0-9]-[0-9]*-","",calendar$Date))
calendar = cbind(calendar,year,month,day)
m1 = 11
day1 = 21
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1))])
grem1 = V+H
grem1[order(grem1)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem1 = data.frame(grem1,tm,1:31,stringsAsFactors = FALSE)
grem1
m2 = 12
day2 = 0
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
grem = V+H
grem[order(grem)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem = data.frame(grem,tm,1:31,stringsAsFactors = FALSE)
grem
proj = apply(X = data_pool,MARGIN = 1,FUN = function(x){
ind = which(grem$tm == x[8])
return((as.numeric(x[9]))*as.numeric(grem[ind,2]))
})
proj = unlist(proj)
#proj = data_pool$ppg * 20
data_pool$proj = proj
head(data_pool)
data_pool$proj[which(data_pool$name %in% c("Matt Murray"))] = 100
data_pool$proj[which(data_pool$name %in% c("Ben Bishop"))] = 100
data_pool$proj[which(data_pool$name %in% c("Tomas Tatar"))] = -100
#data_pool$proj[which(data_pool$name %in% c("John Carlson"))] = -100
data_pool$proj[which(data_pool$name %in% c("Evgeni Malkin"))] = 100
#data_pool$proj[which(data_pool$name %in% c("Alexander Edler"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Paul Stastny"))] = -100
data_pool$proj[which(data_pool$name %in% c("Tyler Ennis"))] = -100
data_pool$proj[which(data_pool$name %in% c("Clayton Keller"))] = -100
data_pool$proj[which(data_pool$name %in% c("Alexander Edler"))] = -100
data_pool$proj[which(data_pool$name %in% c("Andrei Svechnikov"))] = -100
#data_pool$proj[which(data_pool$name %in% c("David Krejci"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Nick Bonino"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Matt Calvert"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Adam Fox"))] = 100
#data_pool$proj[which(data_pool$name %in% c("J.T. Miller"))] = 100
data_pool$proj[which(data_pool$name %in% c("Bryan Little"))] = -100
#data_pool$proj[which(data_pool$name %in% c("David Rittich"))] = 100
#data_pool$proj[which(data_pool$name %in% c("Roman Josi"))] = -100
gpm = matrix(0,nrow=31,ncol=7)
a=1
for(i in c(10:12,1:4)){
V = table(calendar$Visitor[which(calendar$month==i)])
H =table(calendar$Home[which(calendar$month==i)])
oct = V+H
gpm[,a] = oct
a = a + 1
}
colnames(gpm) = as.character(c(10:12,1:4))
rownames(gpm) = names(oct)
gpm = data.frame(gpm)
plot(0,0, ylim=c(9,17),xlim =c(1,7),xaxt='n')
axis(side = 1,at = 1:7,labels = c("Oct","Nov","Dec","Jan","Fev","Mar","Avr"))
apply(X = gpm,MARGIN = 1,lines)
tab = inner_join(tab,data_pool[,c('name','caphit','pos')],by = c("Player" = "name"))
tab = mutate(tab, pp100k = (as.numeric(Total.Points.y) / as.numeric(GP.y) * 82) / (caphit/100000))
tab = mutate(tab, TOIPG = as.numeric(TOI.y) / as.numeric(GP.y))
tab = inner_join(tab,tabpp[,c('Player','ppshare')], by = 'Player')
#tab = select(tab,c('Player','Team.x', 'pos', "GP.y", "TOIPG", "caphit", "pp100k", "Goals.y", "Total.Assists.y", "Total.Points.y", "IPP.y", "Shots.y", "SH..y","ppshare" ))
tab = select(tab,c('Player', "TOIPG", "pp100k", "IPP.y", "Shots.y", "SH..y", "ppshare"))
tab = transform(tab,SH..y = as.numeric(SH..y))
ctoi = filter(tab,TOIPG > 15)['Player']
cppshare = filter(tab,ppshare > 30)['Player']
cshot = filter(tab,SH..y < 30)['Player']
ccand = filter(tab,Player %in% alignment$name)
cplayer = intersect(intersect(ctoi,cppshare),cshot)[,1]
candidat = tab[tab$Player %in% cplayer,]
candidat = right_join(data_pool,candidat, by = c('name' = 'Player'))
data_pool = filter(data_pool,(pos == 'G' | name %in% alignment$name | name %in% candidat$name ))
watchlist = filter(tab,Player %in% alignment$name)
watchlist = right_join(data_pool,watchlist, by = c('name' = 'Player'))
watchlist = watchlist %>% mutate_if(is.numeric, round, 2)
out_wl = datatable(watchlist,options = list(pageLength = 20))
print(watchlist)
########### test simplex
library(Rglpk)
#tab_sante_game = tab_sante_game[-which(tab_sante_game$Last.Name=="Feldman"),]
sub = list()
limit = 100000
trade_nb = 5
j = 5
i = 1
limit = 100000
fppg = as.numeric(data_pool$proj)
#fppg = as.numeric(data_pool$)
sal = as.numeric(data_pool$caphit)
nC = rep(0,nrow(data_pool))
lineup = nD = nG = nAD = nAG = nHQ = nC
indc = which(data_pool$pos == "C")
indad = which(data_pool$pos == "DR")
indag = which(data_pool$pos == "GA")
indhq = which(data_pool$pos == "HQ")
indd = which(data_pool$pos == "DEF")
indg = which(data_pool$pos == "G")
indlineup = which(toupper(data_pool$name) %in% toupper(alignment$name[alignment$pos != "Out"]))
indOut = which(toupper(data_pool$name) %in% toupper(alignment$name[alignment$pos == "Out"]))
length(indlineup)
data_pool[indlineup,]
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
filter(salary,name == 'Valentin Zykov')
filter(data_pool,name == 'Valentin Zykov')
filter(tab,Player == 'Valentin Zykov')
stats_last10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
stats = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=10&lines=single&draftteam=ALL"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
pp = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=410&lines=single&draftteam=ALL"
pp10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
teampp10 = "https://www.naturalstattrick.com/teamtable.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&rate=n&team=all&loc=B&gpf=10&fd=&td="
nhl.last10 = htmltab(doc = stats_last10, which =1)
nhl.tab = htmltab(doc = stats, which = 1)
nhl.pp = htmltab(doc = pp, which = 1)
nhl.pp10 = htmltab(doc = pp10, which = 1)
nhl.teampp10 = htmltab(doc = teampp10, which = 1)
nhl.g = htmltab(doc = webg,which = 1)
nhl.g = htmltab(doc = webg,which = 1)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
