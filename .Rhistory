source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
stats = "https://www.hockey-reference.com/leagues/NHL_2020_skaters.html"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
nhl.tab = htmltab(doc = stats)
nhl.tab = htmltab(doc = stats)
nhl.g = htmltab(doc = webg,which = 1)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
stats = "https://www.hockey-reference.com/leagues/NHL_2020_skaters.html"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
nhl.tab = htmltab(doc = stats)
nhl.g = htmltab(doc = webg,which = 1)
library(XML)
library(stringr)
library(RCurl)
library(htmltab)
library(readxl)
stats = "https://www.hockey-reference.com/leagues/NHL_2020_skaters.html"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
nhl.tab = htmltab(doc = stats)
stats = "https://www.hockey-reference.com/leagues/NHL_2020_skaters.html"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
nhl.tab = htmltab(doc = stats)
stats = "https://www.hockey-reference.com/leagues/NHL_2020_skaters.html"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
nhl.tab = htmltab(doc = stats)
nhl.g = htmltab(doc = webg,which = 1)
nhl.tab = htmltab(doc = stats)
library(XML)
library(stringr)
library(RCurl)
library(htmltab)
library(readxl)
stats = "https://www.hockey-reference.com/leagues/NHL_2020_skaters.html"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
nhl.tab = htmltab(doc = stats)
nhl.g = htmltab(doc = webg,which = 1)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE.R', echo=TRUE)
version()
version
library(XML)
library(stringr)
library(RCurl)
library(htmltab)
library(readxl)
library(DT)
library(dplyr)
setwd("/home/joel/gdrive/pool")
stats_last10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
stats = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=10&lines=single&draftteam=ALL"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
pp = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=410&lines=single&draftteam=ALL"
pp10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
teampp10 = "https://www.naturalstattrick.com/teamtable.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&rate=n&team=all&loc=B&gpf=10&fd=&td="
nhl.last10 = htmltab(doc = stats_last10, which =1)
nhl.tab = htmltab(doc = stats, which = 1)
nhl.g = htmltab(doc = webg,which = 1)
nhl.pp = htmltab(doc = pp, which = 1)
nhl.pp10 = htmltab(doc = pp10, which = 1)
nhl.teampp10 = html(doc = teampp10, which = 1)
nhl.teampp10 = htmltab(doc = teampp10, which = 1)
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
pj_min = 10
tab = filter(tab,as.numeric(y.GP)>=pj_min)
tab = filter(tab,as.numeric(GP.x)>=pj_min)
tabg = filter(tabg, as.numeric(Goalie.Stats....GP) >= pj_min)
tabteampp
teampp10
teampp10$Team
data.frame(teampp10$Team)
data.frame(teampp10$Team,row.names = "")
data.frame(teampp10$Team,row.names = NULL)
teampp10$Team
unique(tab$Team.x)
unique(tab$Team.x)[order(unique(tab$Team.x))]
paste(unique(tab$Team.x)[order(unique(tab$Team.x))],collapse = "'")
paste(unique(tab$Team.x)[order(unique(tab$Team.x))],collapse = "','")
paste(teampp10$Team,collapse = "','"
)
team = data.frame(name = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' ),
ab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH'))
teamname = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' )
ab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
teamab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
names(teamab) = teamname
teampp10$Team = teamab[teampp10$Team]
head(teampp10)
tabpp = inner_join(tabpp,teampp10, by = 'Team')
head(tabpp)
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
teamname = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' )
teamab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
names(teamab) = teamname
teampp10$Team = teamab[teampp10$Team]
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
tab = filter(tab,as.numeric(GP.x)>=pj_min)
tabg = filter(tabg, as.numeric(Goalie.Stats....GP) >= pj_min)
tabpp = filter(tabpp,as.numeric(GP)>=pj_min)
tabpp = mutate(tabpp, ppshare = (TOI.x/GP.x) / (TOI.y/GP.y))
tabpp = mutate(tabpp, ppshare = (as.numeric(TOI.x)/as.numeric(GP.x)) / (as.numeric(TOI.y)/as.numeric(GP.y)))
head(tabpp)
tabg = mutate(tabg,pg = 2 * as.numeric(tabg$Goalie.Stats....W)+ 2* as.numeric(tabg$Goalie.Stats....SO) + as.numeric(tabg$Goalie.Stats....T.O))
data_pool = cbind(tab$Player,tab$GP.x,tab$Total.Points.x)
data_pool = rbind(data_pool,cbind(tabg$Player,tabg$Goalie.Stats....GP,tabg$pg))
colnames(data_pool) = c("name" ,"pj", "pts")
data_pool = data.frame(data_pool,stringsAsFactors = FALSE)
data_pool$name[which(data_pool$name == "Evgenii Dadonov")] = "Evgeny Dadonov"
data_pool$name[which(data_pool$name == "Artemi Panarin")] = "Artemy Panarin"
data_pool$name[which(data_pool$name == "TJ Brodie")] = "T.J. Brodie"
data_pool$name[which(data_pool$name == "Alex Nylander")] = "Alexander Nylander"
data_pool$name[which(data_pool$name == "Matt Dumba")] = "Mathew Dumba"
data_pool$name[which(data_pool$name == "Zach Werenski")] = "Zachary Werenski"
tab$Player[which(tab$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tab$Player[which(tab$Player == "Artemi Panarin")] = "Artemy Panarin"
tab$Player[which(tab$Player == "TJ Brodie")] = "T.J. Brodie"
tab$Player[which(tab$Player == "Alex Nylander")] = "Alexander Nylander"
tab$Player[which(tab$Player == "Matt Dumba")] = "Mathew Dumba"
tab$Player[which(tab$Player == "Zach Werenski")] = "Zachary Werenski"
tabpp$Player[which(tabpp$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tabpp$Player[which(tabpp$Player == "Artemi Panarin")] = "Artemy Panarin"
tabpp$Player[which(tabpp$Player == "TJ Brodie")] = "T.J. Brodie"
tabpp$Player[which(tabpp$Player == "Alex Nylander")] = "Alexander Nylander"
tabpp$Player[which(tabpp$Player == "Matt Dumba")] = "Mathew Dumba"
tabpp$Player[which(tabpp$Player == "Zach Werenski")] = "Zachary Werenski"
# get new salary
salary = read_excel("~/Documents/pool/Liste_2019-20_PDC_Beta.xlsx", sheet = 1)
head(salary)
salary$pos[which(salary$pos == "GAR")] = "G"
salary$pos[which(salary$pos == "CA")] = "HQ"
ind_sal = which(toupper(salary$name) %in% toupper(data_pool$name))
salary$name[-ind_sal]
ind_pool = which(toupper(data_pool$name) %in% toupper(salary$name))
data_pool$name[-ind_pool]
#data_pool[grepl(x=data_pool$name,pattern = "Mat"),]
#salary = salary[-which(salary$Name %in% c("Tyson Barrie")),]
dupSalary = which(salary$name == names(which(table(factor(salary$name)) > 1)))
dupPool = which(data_pool$name == names(which(table(factor(data_pool$name))>1)))
if(length(dupSalary) > 0) {salary = salary[-dupSalary,]}
if(length(dupPool) > 0){ data_pool = data_pool[-dupPool,]}
data_pool = data_pool[which(toupper(data_pool$name) %in% toupper(salary$name)),]
salary = salary[which(toupper(salary$name) %in% toupper(data_pool$name)),]
data_pool = data_pool[order(data_pool$name),]
salary = salary[order(salary$name),]
data.frame(salary$name,data_pool$name)
data_pool$caphit = as.numeric(salary$salary)
data_pool$pos = salary$pos
data_pool$team = salary$team
ppg = as.numeric(data_pool$pts)/as.numeric(data_pool$pj)
data_pool=cbind(data_pool,ppg)
head(data_pool)
data_pool = data_pool[-which(data_pool$team == "UFA"),]
data_pool$team[which(data_pool$team == "MTL")] = "MON"
alignment = read.csv("~/Documents/pool/alignment.csv",stringsAsFactors = FALSE)
alignment$name = gsub(pattern = " $",replacement = "",x = alignment$name)
alignment = alignment[1:19,]
# ajouter prévision selon match restant
calendar = read.csv(file = "~/Documents/pool/calendar.tsv", sep = "\t")
year = as.numeric(gsub(pattern = "-.*","",x = calendar$Date))
month = as.numeric(gsub(pattern = "20[21][0-9]-","",x = gsub(pattern = "-[0-9]*$","",calendar$Date)))
day = as.numeric(gsub(pattern = "20[12][0-9]-[0-9]*-","",calendar$Date))
calendar = cbind(calendar,year,month,day)
m1 = 11
day1 = 18
m2 = 12
day2 = 0
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
grem = V+H
grem[order(grem)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem = data.frame(grem,tm,1:31,stringsAsFactors = FALSE)
grem
proj = apply(X = data_pool,MARGIN = 1,FUN = function(x){
ind = which(grem$tm == x[6])
return((as.numeric(x[7]))*as.numeric(grem[ind,2]))
})
proj = unlist(proj)
#proj = data_pool$ppg * 20
data_pool$proj = proj
head(data_pool)
gpm = matrix(0,nrow=31,ncol=7)
a=1
for(i in c(10:12,1:4)){
V = table(calendar$Visitor[which(calendar$month==i)])
H =table(calendar$Home[which(calendar$month==i)])
oct = V+H
gpm[,a] = oct
a = a + 1
}
colnames(gpm) = as.character(c(10:12,1:4))
rownames(gpm) = names(oct)
gpm = data.frame(gpm)
plot(0,0, ylim=c(9,17),xlim =c(1,7),xaxt='n')
axis(side = 1,at = 1:7,labels = c("Oct","Nov","Dec","Jan","Fev","Mar","Avr"))
apply(X = gpm,MARGIN = 1,lines)
########### test simplex
library(Rglpk)
#tab_sante_game = tab_sante_game[-which(tab_sante_game$Last.Name=="Feldman"),]
fppg = as.numeric(data_pool$proj)
#fppg = as.numeric(data_pool$ppg)
sal = as.numeric(data_pool$caphit)
tab = inner_join(tab,data_pool[,c('name','caphit')],by = c("Player" = "name"))
tab = mutate(tab, pp100k = as.numeric(Total.Points) / (caphit/100000))
tab = mutate(tab, TOIPG = as.numeric(TOI) / as.numeric(GP))
tab = mutate(tab, pp100k = (as.numeric(Total.Points.y) / GP.y * 82) / (caphit/100000))
tab = mutate(tab, pp100k = (as.numeric(Total.Points.y) / as.numeric(GP.y) * 82) / (caphit/100000))
tab = mutate(tab, TOIPG = as.numeric(TOI.y) / as.numeric(GP.y))
head(tab)
tab = mutate(tab,tabpp[c('Player','ppshare')], by = 'Player')
tab = mutate(tab,tabpp['Player','ppshare'], by = 'Player')
head(tab)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
tab = inner_join(tab,tabpp[,c('Player','ppshare')], by = 'Player')
head(tab)
tab = select(tab,c(Player,Team, Position, GP, TOIPG, caphit, pp100k, Goals, Total.Assists, Total.Points, IPP, Shots, SH. ))
tab = select(tab,c('Player','Team', 'Position', "GP", "TOIPG", "caphit", "pp100k", "Goals", "Total.Assists", "Total.Points", "IPP", "Shots", "SH.","ppshare" ))
data_pool
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
sub1
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
sub1 = inner_join(sub1,tab, by = c('name' = 'Player'))
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
ctoi = tab['TOI.y' > 225]['Player']
ctoi = tab['TOI.y' > 325]['Player']
head(tab)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
ctoi = tab['TOIPG' > 15]['Player']
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
tab
ctoi = tab[TOIPG > 22]['Player']
ctoi = filter(tab,TOIPG > 22)['Player']
ctoi
ctoi = filter(tab,TOIPG > 15)['Player']
cppshare = filter(tab,pphare > 30)['Player']
ctoi = filter(tab,TOIPG > 15)['Player']
cppshare = filter(tab,ppshare > 30)['Player']
ctoi = filter(tab,TOIPG > 15)['Player']
cppshare = filter(tab,ppshare > 30)['Player']
cshot = filter(tab,SH..y < 25)['Player']
intersect(intersect(ctoi,cppshare),cshot)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
candidat
cplayer
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
candidat
tab$Player %in% cplayer
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
out_c = filter(out_candidat,pos == "C")
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
grem
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
data_pool = select(data_pool(pos == 'G' || Player %in% alignment$name || Player %in% candidat$name ))
data_pool = select(data_pool,(pos == 'G' || name %in% alignment$name || name %in% candidat$name ))
head(data_pool)
data_pool = filter(data_pool,('pos' == 'G' || name %in% alignment$name || name %in% candidat$name ))
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
head(data_pool)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
sub
hich(test$solution==1)
which(test$solution==1)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
sub
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
which(sol$name[order(sol$pos)]%in% exlineup)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
exlineup
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
?datatable
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
summary(candidat)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
data_pool
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
?saveWidget
getwd()
saveWidget(out,file = paste(getwd(),"/grem/index.html",sep=""),title = "Trade")
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
out_trade
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
View(out_trade)
View(out_grem)
View(out_candidat)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
game_rem = inner_join(grem,grem1,by='Var1')
game_rem
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
grem
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
watchlist
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
alignment$name
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
cplayer
ccand
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
nhl.g = htmltab(doc = webg,which = 1)
nhl.pp = htmltab(doc = pp, which = 1)
nhl.pp10 = htmltab(doc = pp10, which = 1)
nhl.teampp10 = htmltab(doc = teampp10, which = 1)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
setwd("/home/joel/prog/Lafond-Lapalmej.github.io")
stats_last10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
stats = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=10&lines=single&draftteam=ALL"
setwd("/home/joel/prog/Lafond-Lapalmej.github.io")
stats_last10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
stats = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=all&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=10&lines=single&draftteam=ALL"
webg = "https://www.hockey-reference.com/leagues/NHL_2020_goalies.html"
pp = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=none&fd=&td=&tgp=410&lines=single&draftteam=ALL"
pp10 = "https://www.naturalstattrick.com/playerteams.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&stdoi=std&rate=n&team=ALL&pos=S&loc=B&toi=0&gpfilt=gpteam&fd=&td=&tgp=10&lines=single&draftteam=ALL"
teampp10 = "https://www.naturalstattrick.com/teamtable.php?fromseason=20192020&thruseason=20192020&stype=2&sit=pp&score=all&rate=n&team=all&loc=B&gpf=10&fd=&td="
nhl.last10 = htmltab(doc = stats_last10, which =1)
nhl.tab = htmltab(doc = stats, which = 1)
nhl.g = htmltab(doc = webg,which = 1)
nhl.pp = htmltab(doc = pp, which = 1)
nhl.pp10 = htmltab(doc = pp10, which = 1)
nhl.teampp10 = htmltab(doc = teampp10, which = 1)
nhl.g = htmltab(doc = webg,which = 1)
