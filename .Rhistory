text=trt, cex=1, # aspect unknown
main="goulden.latin")
}
# Matches Goulden.
m1 <- lm(yield~ trt + factor(row) + factor(col), data=dat)
anova(m1)
# Matches Goulden.
ggplot(data, aes(x = trt, y = yield)) + geom_point() +
geom_smooth(method = lm)
# Matches Goulden.
ggplot(dat, aes(x = trt, y = yield)) + geom_point() +
geom_smooth(method = lm)
summary(m1)
plot(m1)
data(besag.elbatan)
dat <- besag.elbatan
m1 <- lm(yield ~ 0 + gen + factor(col), dat)
summary(m1)
m1 <- lm(yield ~ gen + factor(col), dat)
summary(m1)
annova(m1)
anova(m1)
a = c(1,2,3)
b = c(4,5)
a + b
a / b
a = c(1,2,3)
b = c(4,5,6)
a / b
ll
knitr::opts_chunk$set(echo = TRUE)
# load a dataset
data(gapminder)
install.packages("gapminder")
# load a dataset
library(gapminder)
data(gapminder)
# regression
?anova
summary(data_t_test)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
# load a dataset
library(gapminder)
data(gapminder)
summary(gapminder)
# t-test
data_t_test <- gapminder %>% select(country, lifeExp) %>% filter(country == "Canada" | country == "Yemen")
summary(data_t_test)
t.test(data_t_test, lifeExp ~ country)
knitr::opts_chunk$set(echo = TRUE)
# load a dataset
library(gapminder)
library(dplyr)
data(gapminder)
summary(gapminder)
# t-test
data_t_test <- gapminder %>% select(country, lifeExp) %>% filter(country == "Canada" | country == "Yemen")
summary(data_t_test)
t.test(data = data_t_test, lifeExp ~ country)
knitr::opts_chunk$set(echo = TRUE)
# load a dataset
library(gapminder)
library(dplyr)
data(gapminder)
summary(gapminder)
# t-test
data_t_test <- gapminder %>% select(country, lifeExp) %>% filter(country == "Canada" | country == "Yemen")
summary(data_t_test)
#t.test(data = data_t_test, lifeExp ~ country)
# ggplot de regression
# add color per type
# add reg line
# add line per type
# split in facet
View(data_t_test)
lr <- lm(gapminder, lifeExp ~ gdpPercap)
lr <- lm(formula = lifeExp ~ gdpPercap, data = gapminder)
summary(lr)
lr
plot(lr)
plot(density(resid(lrlog)))
lrlog <- lm(formula = lifeExp ~ log(gdpPercap), data = gapminder)
summary(lrlog)
plot(density(resid(lrlog)))
lr <- lm(formula = lifeExp ~ gdpPercap, data = gapminder)
summary(lr)
plot(density(resid(lr)))
plot(density(resid(lrlog)))
plot(lr)[[1]]
plot(lr)[1]
plot(resid(lr)~gapminder$gdpPercap)
summary(gapminder)
?log
e
e^2
exp(2)
?exp
names <- ("John","Benoit", "Joel", "Julien")
names <- c("John","Benoit", "Joel", "Julien")
grep(pattern = "Jo", x = names, value = TRUE)
grep(pattern = "Jo", x = names)
??read_excel
?t.test
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
teamname = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' )
teamab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
names(teamab) = teamname
teampp10$Team = teamab[teampp10$Team]
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
pj_min = 5
tab = filter(tab,as.numeric(GP.x)>=pj_min)
tabg = filter(tabg, as.numeric(Goalie.Stats....GP) >= pj_min)
tabpp = filter(tabpp,as.numeric(GP)>=pj_min)
tabpp = mutate(tabpp, ppshare = (as.numeric(TOI.x)/as.numeric(GP.x)) / (as.numeric(TOI.y)/as.numeric(GP.y)) * 100)
tabg = mutate(tabg,pg = 2 * as.numeric(tabg$Goalie.Stats....W)+ 2* as.numeric(tabg$Goalie.Stats....SO) + as.numeric(tabg$Goalie.Stats....T.O))
data_pool = cbind(tab$Player,tab$GP.x,tab$Total.Points.x,tab$GP.y,tab$Total.Points.y)
data_pool = rbind(data_pool,cbind(tabg$Player,tabg$Goalie.Stats....GP,tabg$pg,tabg$Goalie.Stats....GP,tabg$pg))
colnames(data_pool) = c("name" ,"pj", "pts","pj10","pts10")
data_pool = data.frame(data_pool,stringsAsFactors = FALSE)
data_pool$name[which(data_pool$name == "Evgenii Dadonov")] = "Evgeny Dadonov"
data_pool$name[which(data_pool$name == "Artemi Panarin")] = "Artemy Panarin"
data_pool$name[which(data_pool$name == "TJ Brodie")] = "T.J. Brodie"
data_pool$name[which(data_pool$name == "Alex Nylander")] = "Alexander Nylander"
data_pool$name[which(data_pool$name == "Matt Dumba")] = "Mathew Dumba"
data_pool$name[which(data_pool$name == "Tony DeAngelo")] = "Anthony DeAngelo"
data_pool$name[which(data_pool$name == "Zach Werenski")] = "Zachary Werenski"
tab$Player[which(tab$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tab$Player[which(tab$Player == "Artemi Panarin")] = "Artemy Panarin"
tab$Player[which(tab$Player == "TJ Brodie")] = "T.J. Brodie"
tab$Player[which(tab$Player == "Alex Nylander")] = "Alexander Nylander"
tab$Player[which(tab$Player == "Matt Dumba")] = "Mathew Dumba"
tab$Player[which(tab$Player == "Tony DeAngelo")] = "Anthony DeAngelo"
tab$Player[which(tab$Player == "Zach Werenski")] = "Zachary Werenski"
tabpp$Player[which(tabpp$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tabpp$Player[which(tabpp$Player == "Artemi Panarin")] = "Artemy Panarin"
tabpp$Player[which(tabpp$Player == "TJ Brodie")] = "T.J. Brodie"
tabpp$Player[which(tabpp$Player == "Alex Nylander")] = "Alexander Nylander"
tabpp$Player[which(tabpp$Player == "Matt Dumba")] = "Mathew Dumba"
tabpp$Player[which(tabpp$Player == "Tony DeAngelo")] = "Anthony DeAngelo"
tabpp$Player[which(tabpp$Player == "Zach Werenski")] = "Zachary Werenski"
# get new salary
salary = read_excel("~/Documents/pool/Liste_2019-20_PDC_revision_janv20.xlsx", sheet = 1)
salary = data.frame(salary)
#salary$pos[which(salary$pos == "GAR")] = "G"
salary$pos[which(salary$pos == "CA")] = "HQ"
ind_sal = which(toupper(salary$name) %in% toupper(data_pool$name))
salary$name[-ind_sal]
ind_pool = which(toupper(data_pool$name) %in% toupper(salary$name))
data_pool$name[-ind_pool]
#data_pool[grepl(x=data_pool$name,pattern = "Mat"),]
#salary = salary[-which(salary$Name %in% c("Tyson Barrie")),]
dupSalary = which(salary$name == names(which(table(factor(salary$name)) > 1)))
dupPool = which(data_pool$name == names(which(table(factor(data_pool$name))>1)))
if(length(dupSalary) > 0) {salary = salary[-dupSalary,]}
if(length(dupPool) > 0){ data_pool = data_pool[-dupPool,]}
data_pool = data_pool[which(toupper(data_pool$name) %in% toupper(salary$name)),]
salary = salary[which(toupper(salary$name) %in% toupper(data_pool$name)),]
data_pool = data_pool[order(data_pool$name),]
salary = salary[order(salary$name),]
data.frame(salary$name,data_pool$name)
data_pool$caphit = as.numeric(salary$salary)
data_pool$pos = salary$pos
data_pool$team = salary$team
#ppg = as.numeric(data_pool$pts)/as.numeric(data_pool$pj)
ppg = as.numeric(data_pool$pts10)/as.numeric(data_pool$pj10)
data_pool=cbind(data_pool,ppg)
head(data_pool)
alignment = read.csv("~/Documents/pool/alignment.csv",stringsAsFactors = FALSE)
alignment$name = gsub(pattern = " $",replacement = "",x = alignment$name)
alignment = read.csv("~/Documents/pool/alignment.csv",stringsAsFactors = FALSE)
alignment$name = gsub(pattern = " $",replacement = "",x = alignment$name)
alignment = alignment[1:19,]
# ajouter prévision selon match restant
calendar = read.csv(file = "~/Documents/pool/calendar.tsv", sep = "\t")
year = as.numeric(gsub(pattern = "-.*","",x = calendar$Date))
month = as.numeric(gsub(pattern = "20[21][0-9]-","",x = gsub(pattern = "-[0-9]*$","",calendar$Date)))
day = as.numeric(gsub(pattern = "20[12][0-9]-[0-9]*-","",calendar$Date))
calendar = cbind(calendar,year,month,day)
m1 = 2
day1 = 17
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1))])
grem1 = V+H
grem1[order(grem1)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem1 = data.frame(grem1,tm,1:31,stringsAsFactors = FALSE)
grem1
m2 = 3
day2 = 1
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
grem = V+H
grem[order(grem)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem = data.frame(grem,tm,1:31,stringsAsFactors = FALSE)
grem
proj = apply(X = data_pool,MARGIN = 1,FUN = function(x){
ind = which(grem$tm == x[8])
return((as.numeric(x[9]))*as.numeric(grem[ind,2]))
})
proj = unlist(proj)
#proj = data_pool$ppg * 20
data_pool$proj = proj
proj
proj = apply(X = data_pool,MARGIN = 1,FUN = function(x){
ind = which(grem$tm == x[8])
if(length(ind) == 0){print(x)}
return((as.numeric(x[9]))*as.numeric(grem[ind,2]))
})
grem
tm
# ajouter prévision selon match restant
calendar = read.csv(file = "~/Documents/pool/calendar.tsv", sep = "\t")
year = as.numeric(gsub(pattern = "-.*","",x = calendar$Date))
month = as.numeric(gsub(pattern = "20[21][0-9]-","",x = gsub(pattern = "-[0-9]*$","",calendar$Date)))
day = as.numeric(gsub(pattern = "20[12][0-9]-[0-9]*-","",calendar$Date))
calendar = cbind(calendar,year,month,day)
m1 = 2
day1 = 17
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1))])
grem1 = V+H
grem1[order(grem1)]
tm = unique(data_pool$team)
tm
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
teamname = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' )
teamab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
names(teamab) = teamname
teampp10$Team = teamab[teampp10$Team]
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
pj_min = 5
tab = filter(tab,as.numeric(GP.x)>=pj_min)
tabg = filter(tabg, as.numeric(Goalie.Stats....GP) >= pj_min)
tabpp = filter(tabpp,as.numeric(GP)>=pj_min)
tabpp = mutate(tabpp, ppshare = (as.numeric(TOI.x)/as.numeric(GP.x)) / (as.numeric(TOI.y)/as.numeric(GP.y)) * 100)
tabg = mutate(tabg,pg = 2 * as.numeric(tabg$Goalie.Stats....W)+ 2* as.numeric(tabg$Goalie.Stats....SO) + as.numeric(tabg$Goalie.Stats....T.O))
data_pool = cbind(tab$Player,tab$GP.x,tab$Total.Points.x,tab$GP.y,tab$Total.Points.y)
data_pool = rbind(data_pool,cbind(tabg$Player,tabg$Goalie.Stats....GP,tabg$pg,tabg$Goalie.Stats....GP,tabg$pg))
colnames(data_pool) = c("name" ,"pj", "pts","pj10","pts10")
data_pool = data.frame(data_pool,stringsAsFactors = FALSE)
data_pool$name[which(data_pool$name == "Evgenii Dadonov")] = "Evgeny Dadonov"
data_pool$name[which(data_pool$name == "Artemi Panarin")] = "Artemy Panarin"
data_pool$name[which(data_pool$name == "TJ Brodie")] = "T.J. Brodie"
data_pool$name[which(data_pool$name == "Alex Nylander")] = "Alexander Nylander"
data_pool$name[which(data_pool$name == "Matt Dumba")] = "Mathew Dumba"
data_pool$name[which(data_pool$name == "Tony DeAngelo")] = "Anthony DeAngelo"
data_pool$name[which(data_pool$name == "Zach Werenski")] = "Zachary Werenski"
tab$Player[which(tab$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tab$Player[which(tab$Player == "Artemi Panarin")] = "Artemy Panarin"
tab$Player[which(tab$Player == "TJ Brodie")] = "T.J. Brodie"
tab$Player[which(tab$Player == "Alex Nylander")] = "Alexander Nylander"
tab$Player[which(tab$Player == "Matt Dumba")] = "Mathew Dumba"
tab$Player[which(tab$Player == "Tony DeAngelo")] = "Anthony DeAngelo"
tab$Player[which(tab$Player == "Zach Werenski")] = "Zachary Werenski"
tabpp$Player[which(tabpp$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tabpp$Player[which(tabpp$Player == "Artemi Panarin")] = "Artemy Panarin"
tabpp$Player[which(tabpp$Player == "TJ Brodie")] = "T.J. Brodie"
tabpp$Player[which(tabpp$Player == "Alex Nylander")] = "Alexander Nylander"
tabpp$Player[which(tabpp$Player == "Matt Dumba")] = "Mathew Dumba"
tabpp$Player[which(tabpp$Player == "Tony DeAngelo")] = "Anthony DeAngelo"
tabpp$Player[which(tabpp$Player == "Zach Werenski")] = "Zachary Werenski"
# get new salary
salary = read_excel("~/Documents/pool/Liste_2019-20_PDC_revision_janv20.xlsx", sheet = 1)
salary = data.frame(salary)
#salary$pos[which(salary$pos == "GAR")] = "G"
salary$pos[which(salary$pos == "CA")] = "HQ"
ind_sal = which(toupper(salary$name) %in% toupper(data_pool$name))
salary$name[-ind_sal]
ind_pool = which(toupper(data_pool$name) %in% toupper(salary$name))
data_pool$name[-ind_pool]
#data_pool[grepl(x=data_pool$name,pattern = "Mat"),]
#salary = salary[-which(salary$Name %in% c("Tyson Barrie")),]
dupSalary = which(salary$name == names(which(table(factor(salary$name)) > 1)))
dupPool = which(data_pool$name == names(which(table(factor(data_pool$name))>1)))
if(length(dupSalary) > 0) {salary = salary[-dupSalary,]}
if(length(dupPool) > 0){ data_pool = data_pool[-dupPool,]}
data_pool = data_pool[which(toupper(data_pool$name) %in% toupper(salary$name)),]
salary = salary[which(toupper(salary$name) %in% toupper(data_pool$name)),]
data_pool = data_pool[order(data_pool$name),]
salary = salary[order(salary$name),]
data.frame(salary$name,data_pool$name)
data_pool$caphit = as.numeric(salary$salary)
data_pool$pos = salary$pos
data_pool$team = salary$team
#ppg = as.numeric(data_pool$pts)/as.numeric(data_pool$pj)
ppg = as.numeric(data_pool$pts10)/as.numeric(data_pool$pj10)
data_pool=cbind(data_pool,ppg)
head(data_pool)
alignment = read.csv("~/Documents/pool/alignment.csv",stringsAsFactors = FALSE)
alignment$name = gsub(pattern = " $",replacement = "",x = alignment$name)
alignment = alignment[1:19,]
# ajouter prévision selon match restant
calendar = read.csv(file = "~/Documents/pool/calendar.tsv", sep = "\t")
year = as.numeric(gsub(pattern = "-.*","",x = calendar$Date))
month = as.numeric(gsub(pattern = "20[21][0-9]-","",x = gsub(pattern = "-[0-9]*$","",calendar$Date)))
day = as.numeric(gsub(pattern = "20[12][0-9]-[0-9]*-","",calendar$Date))
calendar = cbind(calendar,year,month,day)
m1 = 2
day1 = 17
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1))])
grem1 = V+H
grem1[order(grem1)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem1 = data.frame(grem1,tm,1:31,stringsAsFactors = FALSE)
grem1
m2 = 3
day2 = 1
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
grem = V+H
grem[order(grem)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem = data.frame(grem,tm,1:31,stringsAsFactors = FALSE)
grem
proj = apply(X = data_pool,MARGIN = 1,FUN = function(x){
ind = which(grem$tm == x[8])
if(length(ind) == 0){print(x)}
return((as.numeric(x[9]))*as.numeric(grem[ind,2]))
})
tab=data.frame(nhl.tab, stringsAsFactors = FALSE)
tab10 = data.frame(nhl.last10, stringsAsFactors = FALSE)
tabg = data.frame(nhl.g, stringsAsFactors = FALSE)
tabg = filter(tabg, SA != "SA")
tabpp = data.frame(nhl.pp, stringsAsFactors = FALSE)
tabpp10 = data.frame(nhl.pp10, stringsAsFactors = FALSE)
teampp10 = data.frame(nhl.teampp10, stringsAsFactors = FALSE)
teamname = c('Anaheim Ducks','Arizona Coyotes','Boston Bruins','Buffalo Sabres',
'Carolina Hurricanes','Columbus Blue Jackets','Calgary Flames','Chicago Blackhawks',
'Colorado Avalanche','Dallas Stars','Detroit Red Wings','Edmonton Oilers',
'Florida Panthers','Los Angeles Kings','Minnesota Wild','Montreal Canadiens',
'New Jersey Devils','Nashville Predators','New York Islanders','New York Rangers',
'Ottawa Senators','Philadelphia Flyers','Pittsburgh Penguins','San Jose Sharks',
'St Louis Blues','Tampa Bay Lightning','Toronto Maple Leafs','Vancouver Canucks',
'Vegas Golden Knights','Winnipeg Jets','Washington Capitals' )
teamab =  c('ANA','ARI','BOS','BUF','CAR','CBJ','CGY','CHI','COL','DAL','DET','EDM','FLA',
'L.A','MIN','MTL','N.J','NSH','NYI','NYR','OTT','PHI','PIT','S.J','STL',
'T.B','TOR','VAN','VGK','WPG','WSH')
names(teamab) = teamname
teampp10$Team = teamab[teampp10$Team]
tabpp10 = inner_join(tabpp10,teampp10,by = 'Team')
tab = inner_join(tab,tab10, by = "Player")
tabpp = inner_join(tabpp, tabpp10, by = "Player")
head(tabpp)
pj_min = 5
tab = filter(tab,as.numeric(GP.x)>=pj_min)
tabg = filter(tabg, as.numeric(Goalie.Stats....GP) >= pj_min)
tabpp = filter(tabpp,as.numeric(GP)>=pj_min)
tabpp = mutate(tabpp, ppshare = (as.numeric(TOI.x)/as.numeric(GP.x)) / (as.numeric(TOI.y)/as.numeric(GP.y)) * 100)
tabg = mutate(tabg,pg = 2 * as.numeric(tabg$Goalie.Stats....W)+ 2* as.numeric(tabg$Goalie.Stats....SO) + as.numeric(tabg$Goalie.Stats....T.O))
data_pool = cbind(tab$Player,tab$GP.x,tab$Total.Points.x,tab$GP.y,tab$Total.Points.y)
data_pool = rbind(data_pool,cbind(tabg$Player,tabg$Goalie.Stats....GP,tabg$pg,tabg$Goalie.Stats....GP,tabg$pg))
colnames(data_pool) = c("name" ,"pj", "pts","pj10","pts10")
data_pool = data.frame(data_pool,stringsAsFactors = FALSE)
data_pool$name[which(data_pool$name == "Evgenii Dadonov")] = "Evgeny Dadonov"
data_pool$name[which(data_pool$name == "Artemi Panarin")] = "Artemy Panarin"
data_pool$name[which(data_pool$name == "TJ Brodie")] = "T.J. Brodie"
data_pool$name[which(data_pool$name == "Alex Nylander")] = "Alexander Nylander"
data_pool$name[which(data_pool$name == "Matt Dumba")] = "Mathew Dumba"
data_pool$name[which(data_pool$name == "Tony DeAngelo")] = "Anthony DeAngelo"
data_pool$name[which(data_pool$name == "Zach Werenski")] = "Zachary Werenski"
tab$Player[which(tab$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tab$Player[which(tab$Player == "Artemi Panarin")] = "Artemy Panarin"
tab$Player[which(tab$Player == "TJ Brodie")] = "T.J. Brodie"
tab$Player[which(tab$Player == "Alex Nylander")] = "Alexander Nylander"
tab$Player[which(tab$Player == "Matt Dumba")] = "Mathew Dumba"
tab$Player[which(tab$Player == "Tony DeAngelo")] = "Anthony DeAngelo"
tab$Player[which(tab$Player == "Zach Werenski")] = "Zachary Werenski"
tabpp$Player[which(tabpp$Player == "Evgenii Dadonov")] = "Evgeny Dadonov"
tabpp$Player[which(tabpp$Player == "Artemi Panarin")] = "Artemy Panarin"
tabpp$Player[which(tabpp$Player == "TJ Brodie")] = "T.J. Brodie"
tabpp$Player[which(tabpp$Player == "Alex Nylander")] = "Alexander Nylander"
tabpp$Player[which(tabpp$Player == "Matt Dumba")] = "Mathew Dumba"
tabpp$Player[which(tabpp$Player == "Tony DeAngelo")] = "Anthony DeAngelo"
tabpp$Player[which(tabpp$Player == "Zach Werenski")] = "Zachary Werenski"
# get new salary
salary = read_excel("~/Documents/pool/Liste_2019-20_PDC_revision_janv20.xlsx", sheet = 1)
salary = data.frame(salary)
#salary$pos[which(salary$pos == "GAR")] = "G"
salary$pos[which(salary$pos == "CA")] = "HQ"
ind_sal = which(toupper(salary$name) %in% toupper(data_pool$name))
salary$name[-ind_sal]
ind_pool = which(toupper(data_pool$name) %in% toupper(salary$name))
data_pool$name[-ind_pool]
#data_pool[grepl(x=data_pool$name,pattern = "Mat"),]
#salary = salary[-which(salary$Name %in% c("Tyson Barrie")),]
dupSalary = which(salary$name == names(which(table(factor(salary$name)) > 1)))
dupPool = which(data_pool$name == names(which(table(factor(data_pool$name))>1)))
if(length(dupSalary) > 0) {salary = salary[-dupSalary,]}
if(length(dupPool) > 0){ data_pool = data_pool[-dupPool,]}
data_pool = data_pool[which(toupper(data_pool$name) %in% toupper(salary$name)),]
salary = salary[which(toupper(salary$name) %in% toupper(data_pool$name)),]
data_pool = data_pool[order(data_pool$name),]
#data_pool = data_pool[-which(duplicated(data_pool$name)),]
salary = salary[order(salary$name),]
data.frame(salary$name,data_pool$name)
data_pool$caphit = as.numeric(salary$salary)
data_pool$pos = salary$pos
data_pool$team = salary$team
#ppg = as.numeric(data_pool$pts)/as.numeric(data_pool$pj)
ppg = as.numeric(data_pool$pts10)/as.numeric(data_pool$pj10)
data_pool=cbind(data_pool,ppg)
head(data_pool)
#data_pool = data_pool[-which(data_pool$team == "UFA"),]
#data_pool$team[which(data_pool$team == "MTL")] = "MON"
#data_pool$caphit = as.numeric(gsub(pattern = ",| |\\$","",data_pool$caphit))
alignment = read.csv("~/Documents/pool/alignment.csv",stringsAsFactors = FALSE)
alignment$name = gsub(pattern = " $",replacement = "",x = alignment$name)
alignment = alignment[1:19,]
# ajouter prévision selon match restant
calendar = read.csv(file = "~/Documents/pool/calendar.tsv", sep = "\t")
year = as.numeric(gsub(pattern = "-.*","",x = calendar$Date))
month = as.numeric(gsub(pattern = "20[21][0-9]-","",x = gsub(pattern = "-[0-9]*$","",calendar$Date)))
day = as.numeric(gsub(pattern = "20[12][0-9]-[0-9]*-","",calendar$Date))
calendar = cbind(calendar,year,month,day)
m1 = 2
day1 = 17
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1))])
grem1 = V+H
grem1[order(grem1)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem1 = data.frame(grem1,tm,1:31,stringsAsFactors = FALSE)
grem1
m2 = 3
day2 = 1
V = table(calendar$Visitor[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
H =table(calendar$Home[which((calendar$month==m1 & calendar$day >= day1)|(calendar$month==m2 & calendar$day >= day2))])
grem = V+H
grem[order(grem)]
tm = unique(data_pool$team)
tm = tm[order(tm)]
tm = tm[c(1:4,7,5,8,9,6,10:16,18,17,19:31)]
grem = data.frame(grem,tm,1:31,stringsAsFactors = FALSE)
grem
proj = apply(X = data_pool,MARGIN = 1,FUN = function(x){
ind = which(grem$tm == x[8])
if(length(ind) == 0){print(x)}
return((as.numeric(x[9]))*as.numeric(grem[ind,2]))
})
proj = unlist(proj)
#proj = data_pool$ppg * 20
data_pool$proj = proj
head(data_pool)
data_pool$proj[which(data_pool$name %in% c("Marc-Andre Fleury"))] = 100
#data_pool$proj[which(data_pool$name %in% c("Tristan Jarry"))] = 100
#data_pool$proj[which(data_pool$name %in% c("Roman Josi"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Mikko Rantanen"))] = -100
data_pool$proj[which(data_pool$name %in% c("Samuel Girard"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Cale Makar"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Bo Horvat"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Tanner Pearson"))] = -100
data_pool$proj[which(data_pool$name %in% c("Jonathan Toews"))] = -100
data_pool$proj[which(data_pool$name %in% c("Dominik Kubalik"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Joonas Donskoi"))] = -150
#data_pool$proj[which(data_pool$name %in% c("Andre Burakovsky"))] = -100
#data_pool$proj[which(data_pool$name %in% c("Nick Bonino"))] = -100
data_pool$proj[which(data_pool$name %in% c("David Perron"))] = -100
gpm = matrix(0,nrow=31,ncol=7)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
source('~/Documents/pool/pool_UNIQUE2.R', echo=TRUE)
